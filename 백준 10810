# 백준 10810 공넣기
# 1번 방법:
N,M = map(int,input().split())
baskets = [0] * (N+1) # 0 0 0 0 0 0

for _ in range(M):
  x,y,i = map(int,input().split())
  for j in range(x, y+1):
    baskets[j] = i

for i in range(1, len(baskets)):
  print(baskets[i], end='')

# baskets의 개수를 N개로 설정했지만, basket의 개수를 N+1개로 설정. ex) N = 5, M = 5 -> 0 0 0 0 0 0
# map함수로 x(공을 넣기 시작할 바구니 번호) y(공을 마지막으로 넣을 바구니 번호) i(공 번호) 분류
# 바구니 번호 x 부터 y까지 공 i를 넣겠다. ex) x = 3 y =5 i = 4 라고 가정. 3번 바구니에서 부터 5번 바구니에까지 4라는 공을 넣는다. 0 0 0 0 0 0 -> 0 0 0 4 4 4 로 변경.
# 이제 바구니안에 있는 공을 출력할건데, 1부터 끝까지 출력할것. 0 0 4 4 4
# -> 뭔가했는데 리스트의 인덱스 방식을 바구니의 번호와 맞춘것 뿐이다. 리스트는 인덱스 방식이 0번 부터 시작. 0 1 2 3 4 5.  x,y 는 항상 1부터 시작이다. 따라서 인덱스 1번 부터 공을 넣음.
# 이렇게 하면 1부터 끝까지 출력하면 원하는대로 나옴.



# 2번 방법:
N,M = map(int,input().split())
baskets = [0] * N # 0 0 0 0 0

for _ in range(M):
  x,y,i = map(int,input().split())
  for j in range(x, y+1):
    baskets[j-1] = i

for i in range (len(basket)):
  print(baskets[i], end=' ')

# baskets 을 0 0 0 0 0 이렇게 N의 개수 만큼 생성.
# baskets에 x 부터 y까지 넣을건데 x가 1이라고 한다면 인덱스에서는 0번을 의미. 따라서 j-1
# 0번부터 끝까지 출력.
